---
- name: 'Include OS specific vars'
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"
  no_log: "{{ adjoin_no_log }}"

- name: "NetBIOS Name"
  ansible.builtin.debug:
    msg: "Warning! NetBIOS name is not the same as the hostname. If you did not set it, the hostname has been truncated to 15 characters: {{ adjoin_netbios_name }}"
  when: ansible_hostname != adjoin_netbios_name

- name: 'Install packages'
  ansible.builtin.include_tasks: "install-{{ ansible_os_family }}.yml"

- name: 'Configure services'
  ansible.builtin.template:
    dest: "{{ conffile.dest }}"
    src: "{{ conffile.src }}"
    mode: 0644
    owner: 'root'
    group: 'root'
  no_log: "{{ adjoin_no_log }}"
  loop:
    - {src: 'ldap.conf.j2', dest: "{{ openldap_conffile }}"}
    - {src: 'krb5.conf.j2', dest: '/etc/krb5.conf'}
  loop_control:
    loop_var: 'conffile'

- name: "Configure Samba for each domain"
  ansible.builtin.template:
    dest: "/etc/samba/smb_{{ domain.name }}.conf"
    src: "smb.conf.j2"
    mode: 0644
    owner: 'root'
    group: 'root'
  no_log: "{{ adjoin_no_log }}"
  loop: "{{ adjoin_domains }}"
  loop_control:
    loop_var: 'domain'

- name: 'Check AD connection'
  block:
    - name: "Check AD connection with testjoin"
      ansible.builtin.command: "timeout 5 /usr/bin/net ads testjoin -s /etc/samba/smb_{{ domain.name }}.conf"
      changed_when: false
      loop: "{{ adjoin_domains }}"
      no_log: "{{ adjoin_no_log }}"
      loop_control:
        loop_var: 'domain'
  rescue:
    - name: "Join AD domain"
      ansible.builtin.command: '/usr/bin/net ads join -s /etc/samba/smb_{{ domain.name }}.conf \
        -U{{ domain.username }}%{{ domain.password }} \
        osName="{{ ansible_distribution }}" \
        osVer="{{ ansible_distribution_version }}" \
        createcomputer={{ domain.computer_objects_path }}'
      no_log: "{{ adjoin_no_log }}"
      loop: "{{ adjoin_domains }}"
      changed_when: true
      loop_control:
        loop_var: 'domain'

- name: "Configure SSSD"
  ansible.builtin.template:
    dest: "/etc/sssd/sssd.conf"
    src: "sssd.conf.j2"
    mode: 0600
    owner: 'root'
    group: 'root'
  no_log: "{{ adjoin_no_log }}"
  notify:
    - reconfigure redhat pam
    - reconfigure debian pam
    - clear sssd cache

- name: "Configure services - Common"
  ansible.builtin.systemd:
    name: "{{ service.name }}"
    enabled: "{{ service.enabled }}"
    masked: "{{ service.masked }}"
    state: "{{ service.state }}"
  loop:
    - {'name':'sssd', 'enabled':'yes', 'masked':'no', 'state':'started'}
    - {'name':'dbus', 'enabled':'yes', 'masked':'no', 'state':'started'}
    - {'name':'systemd-logind', 'enabled':'no', 'masked':'yes', 'state':'stopped'}
  loop_control:
    loop_var: 'service'

- name: "Configure services - OS-specific"
  ansible.builtin.systemd:
    name: "{{ service.name }}"
    enabled: "{{ service.enabled }}"
    masked: "{{ service.masked }}"
    state: "{{ service.state }}"
  loop: "{{ os_specific_services }}"
  loop_control:
    loop_var: 'service'
  when: os_specific_services is defined

- name: "Configure Sudo permissions for admin users"
  ansible.builtin.template:
    dest: "/etc/sudoers.d/10_linux_admins"
    src: "sudoers_10_linux_admins"
    mode: 0440
    validate: "visudo -cf %s"
    owner: 'root'
    group: 'root'
  when: adjoin_configure_sudo
